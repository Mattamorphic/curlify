{"version":3,"sources":["serviceWorker.ts","enums/index.tsx","utils/index.ts","components/data/graphql/GraphQL.tsx","components/heading/Heading.tsx","components/shared/Button.tsx","components/shared/Tooltip.tsx","components/shared/Copy.tsx","components/shared/Saving.tsx","components/shared/TextArea.tsx","components/output/curl/Curl.tsx","components/shared/Select.tsx","components/output/selector/Selector.tsx","components/output/Output.tsx","components/shared/Input.tsx","components/config/destination/domain/Domain.tsx","components/config/destination/endpoint/Endpoint.tsx","components/config/destination/Destination.tsx","components/config/method/Method.tsx","components/shared/Notice.tsx","components/shared/Toggler.tsx","components/config/headers/type/Types.tsx","components/config/headers/value/Value.tsx","components/config/headers/Headers.tsx","components/config/Config.tsx","components/data/graphql/type/Type.tsx","components/data/json/Json.tsx","components/data/selector/Selector.tsx","components/data/Data.tsx","components/history/clearhistory/ClearHistory.tsx","components/history/listhistory/listhistoryentry/loadhistoryentry/LoadHistoryEntry.tsx","components/history/listhistory/listhistoryentry/ListHistoryEntry.tsx","components/history/listhistory/ListHistory.tsx","components/history/History.tsx","components/shared/Table.tsx","components/test/fetchresponse/responseheaders/ResponseHeaders.tsx","components/test/fetchresponse/responsejson/ResponseJson.tsx","components/test/fetchresponse/responseraw/ResponseRaw.tsx","components/test/fetchresponse/FetchResponse.tsx","components/shared/Loading.tsx","components/shared/Confirm.tsx","components/shared/Checkbox.tsx","components/test/request/proxy/Proxy.tsx","components/test/request/Request.tsx","components/test/Test.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","HTTPMethods","HTTPHeaders","DataType","OutputType","InputTypes","ColumnCount","JsonValueTypes","GraphQLType","methodHasPayload","method","GET","HEAD","includes","PROXY","regEx","curlData","curlHeader","curlMethod","dateTimeZoneChars","jsonData","multipleSpaces","newLine","newLineAndTab","quotes","singleEscapedNewLine","url","isValidMethod","string","Object","values","isValidURL","domain","endpoint","charAt","length","possUrl","isValidHeaders","headers","types","reduce","_","curr","type","isValidGraphQLString","gql","parse","isStringANumber","value","isNaN","parseInt","isStringADate","Date","replace","isStringBooleanOrNull","toLowerCase","isStringAURL","isStorageAvailable","storage","x","setItem","removeItem","e","addToHistory","config","data","status","localStorage","keys","i","key","push","removeKey","sort","shift","id","getTime","toString","item","JSON","stringify","getHistory","requestHistory","getItem","a","b","a_id","b_id","Heading","props","react_default","createElement","className","alt","src","imageSrc","Button","isPrimary","disabled","isDisabled","onClick","onClickRaw","preventDefault","clickValue","children","label","Tooltip","text","Copy","copy","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","navigator","clipboard","writeText","content","stop","apply","this","arguments","shared_Tooltip","shared_Button","react_fontawesome_index_es","icon","faCopy","size","Saving","react_transition_group","transitionEnter","transitionEnterTimeout","transitionLeave","transitionName","isSaved","faSave","TextArea","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onUpdate","onChangeDirect","target","state","isFullWidth","onChange","style","React","Component","Curl","serializerCurl","hasNewConfig","hasNewData","getMethod","getHeaders","newData","getData","domainAndEndpoint","getDomainAndEndpoint","GQL","graphQL","query","json","FORM","updateCurl","curl","setState","hasDraft","updateData","updateConfig","draft","getValue","regex","utils","exec","TextArea_TextArea","background","concat","process","backgroundAttachment","backgroundColor","backgroundRepeat","color","shared_Saving","shared_Copy","payload","map","header","join","parsePayloadString","Select","selected","Fragment","multiple","isMultiple","name","Selector","shared_Select","Output","output","toUpperCase","CURL","Curl_Curl","selector_Selector","Input","checked","isChecked","onChangeRaw","placeholder","TEXT","Domain","shared_Input","URL","Endpoint","Destination","width","domain_Domain","endpoint_Endpoint","Method","Notice","heading","Toggler","onToggle","isToggled","Types","index","Value","Headers","updateType","updateValue","addHeader","removeHeader","currentTarget","split","pop","undefined","filter","faMinus","type_Types","toConsumableArray","value_Value","faPlus","Config","updateMethod","updateHeaders","updateDestination","toggleConfigSettings","prevState","showConfigSettings","destination","shared_Toggler","headers_Headers","TWELVE","method_Method","TWO","destination_Destination","TEN","shared_Notice","href","PureComponent","Type","GraphQL","updateGraphQL","getDocAndTypeFromGQLString","onUpdateData","pretty","PrettyMe","type_Type","faMagic","doc","definitions","operation","print","newProps","Json","updateJson","object","Data","Json_Json","GraphQL_GraphQL","data_selector_Selector","ClearHistory","clear","faTrash","LoadHistoryEntry","faUpload","ListHistoryEntry","statusClass","loadhistoryentry_LoadHistoryEntry","ListHistory","updateFilter","_this2","history","entry","historyEntry","listhistoryentry_ListHistoryEntry","History","loadHistory","toggleHistory","showHistory","ListHistory_ListHistory","clearhistory_ClearHistory","clearHistory","Table","row","j","data-label","ResponseHeaders","toggleHeaders","showHeaders","shared_Table","Array","from","Header","get","ResponseJson","toggleJson","showJson","replacer","p1","p2","p3","p4","part","end","indent","valueClass","STRING","NUMBER","DATE","BOOLEAN","ReactDOMServer","renderToString","repeat","dangerouslySetInnerHTML","__html","ResponseRaw","toggleRaw","showRaw","FetchResponse","ResponseHeaders_ResponseHeaders","ResponseRaw_ResponseRaw","ResponseJson_ResponseJson","Loading","Confirm","confirm","message","onConfirm","onCancel","Checkbox","isCheckedLabel","isNotCheckedLabel","CHECKBOX","Proxy","toggleProxySettings","showProxySettings","onUpdateProxyUrl","onUpdateProxy","isEnabled","proxy","onUpdateProxyEnabled","isExpanded","shared_Checkbox","Request","onRequest","Proxy_Proxy","hasRun","shouldConfirm","shared_Confirm","Test","baseState","getDestination","getFetchData","fetchData","body","onTest","_callee2","_context2","isLoading","response","dest","fetch","sent","t0","finish","prevProps","prevProxy","newProxy","validation","success","idx","shared_Loading","proxyMessage","request_Request","updateProxy","fetchresponse_FetchResponse","App","onConfigChange","validatePayload","onDataChange","onProxyChange","result","form","test","showData","heading_Heading","Config_Config","output_Output","data_Data","History_History","test_Test","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b46920b6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export enum HTTPMethods {\n  DELETE = 'DELETE',\n  GET = 'GET',\n  HEAD = 'HEAD',\n  PATCH = 'PATCH',\n  POST = 'POST',\n  PUT = 'PUT'\n}\n\nexport enum HTTPHeaders {\n  'A-IM' = 'A-IM',\n  Accept = 'Accept',\n  'Accept-Charset' = 'Accept-Charset',\n  'Accept-Datetime' = 'Accept-Datetime',\n  'Accept-Encoding' = 'Accept-Encoding',\n  'Accept-Language' = 'Accept-Language',\n  'Access-Control-Request-Method' = 'Access-Control-Request-Method',\n  'Access-Control-Request-Headers' = 'Access-Control-Request-Headers',\n  Authorization = 'Authorization',\n  Authentication = 'Authentication',\n  'Cache-Control' = 'Cache-Control',\n  'Content-Length' = 'Content-Length',\n  'Content-MD5' = 'Content-MD5',\n  'Content-Type' = 'Content-Type',\n  Cookie = 'Cookie',\n  Date = 'Date',\n  Expect = 'Expect',\n  Forwarded = 'Forwarded',\n  From = 'From',\n  Host = 'Host',\n  'HTTP2-Settings' = 'HTTP2-Settings',\n  'If-Match' = 'If-Match',\n  'If-Modified-Since' = 'If-Modified-Since',\n  'If-None-Match' = 'If-None-Match',\n  'If-Range' = 'If-Range',\n  'If-Unmodified-Since' = 'If-Unmodified-Since',\n  'Max-Forwards' = 'Max-Forwards',\n  Pragma = 'Pragma',\n  'Proxy-Authorization' = 'Proxy-Authorization',\n  Range = 'Range',\n  Referer = 'Referer',\n  TE = 'TE',\n  Upgrade = 'Upgrade',\n  'User-Agent' = 'User-Agent',\n  Via = 'Via',\n  Warning = 'Warning'\n}\n\nexport enum DataType {\n  FORM = 'form',\n  JSON = 'json',\n  GQL = 'graphQL'\n}\n\nexport enum OutputType {\n  CURL = 'curl'\n}\n\nexport enum InputTypes {\n  BUTTON = 'button',\n  CHECKBOX = 'checkbox',\n  COLOR = 'color',\n  DATE = 'date',\n  DATETIME_LOCAL = 'datetime-local',\n  EMAIL = 'email',\n  FILE = 'file',\n  HIDDEN = 'hidden',\n  IMAGE = 'image',\n  MONTH = 'month',\n  NUMBER = 'number',\n  PASSWORD = 'password',\n  RADIO = 'radio',\n  RANGE = 'range',\n  RESET = 'reset',\n  SEARCH = 'search',\n  SUBMIT = 'submit',\n  TEL = 'tel',\n  TEXT = 'text',\n  TIME = 'time',\n  URL = 'url',\n  WEEK = 'week'\n}\n\nexport enum ColumnCount {\n  ONE = 'one column',\n  TWO = 'two columns',\n  THREE = 'three columns',\n  FOUR = 'four columns',\n  FIVE = 'five columns',\n  SIX = 'six columns',\n  SEVEN = 'seven columns',\n  EIGHT = 'eight columns',\n  NINE = 'nine columns',\n  TEN = 'ten columns',\n  ELEVEN = 'eleven columns',\n  TWELVE = 'twelve columns'\n}\n\nexport enum JsonValueTypes {\n  NUMBER = 'number',\n  DATE = 'date',\n  BOOLEAN = 'boolean',\n  URL = 'url',\n  STRING = 'string'\n}\n","import { ConfigData } from '../components/config/Config';\nimport { DataData } from '../components/data/Data';\nimport { Header } from '../components/config/headers/Headers';\nimport { HistoryEntry } from '../components/history/History';\nimport { parse } from 'graphql';\nimport { ProxyData } from '../components/test/request/proxy/Proxy';\n\nimport { HTTPHeaders, HTTPMethods } from '../enums';\n\nexport const methodHasPayload = (method: HTTPMethods) =>\n  ![HTTPMethods.GET, HTTPMethods.HEAD].includes(method);\n\nexport const PROXY = 'https://curlify-proxy.herokuapp.com/';\n\nexport const regEx = {\n  // Todo: convert to /gms https://github.com/babel/babel/pull/10347\n  curlData: /(?:-d\\s{0,}'|\")({.*})(?=['|\"])/gim,\n  curlHeader: /(?:-H \")([\\w\\d]{1,})(?:\\s{0,}:\\s{0,})(.+?)(?=\")/gim,\n  curlMethod: /(?:-X\\s{0,})(\\w{3,6})/gim,\n  dateTimeZoneChars: /[T|Z]/gim,\n  jsonData: /^( *)(\"[^\"]+\": )?(\"[^\"].*\"|[\\w.+-]*)?([{}[\\],]*)?$/gm,\n  multipleSpaces: / +/gm,\n  newLine: /[\\r|\\n]/gm,\n  newLineAndTab: /[\\n|\\r|\\t]/gm,\n  quotes: /[\"']/gim,\n  singleEscapedNewLine: /(?<!\\\\)\\\\n/gm,\n  url: /^((?:http(?:s)?:\\/\\/)?[\\w.-]+(?:.[\\w.-]+))+([\\w-._~:/?#[\\]@!$&'()*+,;=.]+)$/gim\n};\n\n// export const hasDataChanged = (\n//   prevData: DataData,\n//   newData: DataData\n// ): boolean => {\n//   return false;\n// }\n//\n// export const hasConfigChanged = (\n//   prevData: DataData,\n//   newData: DataData\n// ): boolean => {\n//   return false;\n// }\n\nexport const hasProxyChanged = (\n  prevProxy: ProxyData,\n  newProxy: ProxyData\n): boolean => {\n  return (\n    prevProxy.isEnabled !== newProxy.isEnabled || prevProxy.url !== newProxy.url\n  );\n};\n\nexport const isValidMethod = (string: string): boolean =>\n  Object.values(HTTPMethods).includes(string);\n\nexport const isValidURL = (domain: string, endpoint: string): boolean => {\n  const url =\n    domain +\n    (domain.charAt(domain.length - 1) !== '/' && endpoint.charAt(0) !== '/'\n      ? '/'\n      : '') +\n    endpoint;\n\n  const possUrl = url.match(regEx.url);\n  return !possUrl || possUrl[0] !== url ? false : true;\n};\n\nexport const isValidHeaders = (headers: Header[]): boolean => {\n  const types = Object.values(HTTPHeaders);\n  return headers.reduce((_: boolean, curr: Header) => {\n    return types.includes(curr.type); // TODO: validate the value\n  }, true);\n};\n\nexport const isValidJsonString = (json: string) => {\n  try {\n    JSON.parse(json);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\n\nexport const isValidGraphQLString = (gql: string) => {\n  try {\n    parse(gql);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\n\nexport const isStringANumber = (value: string): boolean => {\n  return !isNaN(parseInt(value));\n};\n\nexport const isStringADate = (value: string): boolean => {\n  return !isNaN(Date.parse(value.replace(regEx.dateTimeZoneChars, ' ')));\n};\n\nexport const isStringBooleanOrNull = (value: string): boolean => {\n  const permitted = ['true', 'false', 'null', 'nil', 'undefined'];\n  return permitted.includes(value.toLowerCase());\n};\n\nexport const isStringAURL = (value: string): boolean => {\n  return !!value.replace(regEx.quotes, '').match(regEx.url);\n};\n\nexport const isStorageAvailable = (): boolean => {\n  let storage;\n  try {\n    storage = window['localStorage'];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport const addToHistory = (\n  config: ConfigData,\n  data: DataData,\n  status: number\n): string => {\n  const storage = window.localStorage;\n\n  if (storage.length + 1 === 20) {\n    let keys = [];\n    for (let i = 0; i < storage.length; i++) {\n      const key = storage.key(i);\n      if (key) {\n        keys.push(key);\n      }\n    }\n    const removeKey = keys.sort().shift();\n    if (removeKey) {\n      storage.removeItem(removeKey);\n    }\n  }\n  const id = new Date().getTime().toString();\n  const item = JSON.stringify({\n    config,\n    data,\n    id,\n    status\n  });\n  storage.setItem(id, item);\n  return id;\n};\n\nexport const getHistory = () => {\n  if (!isStorageAvailable()) {\n    return [];\n  }\n  const requestHistory = [] as HistoryEntry[];\n  const storage = window.localStorage;\n  for (let i = 0; i < storage.length; i++) {\n    const key = storage.key(i);\n    if (!key) {\n      break;\n    }\n    const data = storage.getItem(key);\n    if (!data) {\n      break;\n    }\n    try {\n      requestHistory.push(JSON.parse(data));\n    } catch (_) {\n      storage.removeItem(key);\n    }\n  }\n  return requestHistory.sort((a, b) => {\n    const a_id = parseInt(a.id);\n    const b_id = parseInt(b.id);\n    return a_id > b_id ? -1 : a_id < b_id ? 1 : 0;\n  });\n};\n","import './css/GraphQL.css';\n\nimport Button from '../../shared/Button';\nimport Copy from '../../shared/Copy';\nimport { faMagic } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { gqlPayloadType } from '../Data';\nimport React from 'react';\nimport Saving from '../../shared/Saving';\nimport TextArea from '../../shared/TextArea';\nimport Tooltip from '../../shared/Tooltip';\nimport Type from './type/Type';\n\nimport { OperationDefinitionNode, parse, print } from 'graphql';\n\nexport enum GraphQLType {\n  QUERY = 'query',\n  MUTATION = 'mutation'\n}\n\ninterface ParsedGQL {\n  gql: string;\n  type: GraphQLType;\n}\n\ninterface GraphQLProps {\n  data: gqlPayloadType;\n  onUpdateData: (value: gqlPayloadType) => void;\n}\n\ninterface GraphQLState {\n  draft: string;\n  isSaved: boolean;\n  type: GraphQLType;\n}\n\nexport default class GraphQL extends React.PureComponent<\n  GraphQLProps,\n  GraphQLState\n> {\n  constructor(props: GraphQLProps) {\n    super(props);\n    const gql = GraphQL.getDocAndTypeFromGQLString(props.data.query);\n    this.state = {\n      draft: gql.gql,\n      isSaved: true,\n      type: gql.type\n    };\n  }\n\n  static getDocAndTypeFromGQLString(gql: string): ParsedGQL {\n    const doc = parse(gql);\n    const def: OperationDefinitionNode = doc\n      .definitions[0] as OperationDefinitionNode;\n    const type = def.operation as GraphQLType;\n    return {\n      gql: print(doc),\n      type\n    };\n  }\n\n  static getDerivedStateFromProps(\n    newProps: GraphQLProps,\n    state: GraphQLState\n  ): GraphQLState {\n    if (newProps.data.query !== state.draft && !state.isSaved) {\n      return state;\n    }\n    try {\n      const gql = GraphQL.getDocAndTypeFromGQLString(newProps.data.query);\n      return {\n        draft: newProps.data.query,\n        isSaved: true,\n        type: gql.type\n      };\n    } catch (e) {\n      return state;\n    }\n  }\n\n  updateGraphQL = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const draft = e.target.value;\n    try {\n      const gql = GraphQL.getDocAndTypeFromGQLString(draft);\n      if (gql.gql !== this.state.draft) {\n        this.props.onUpdateData(\n          // replace any existing operation with an empty string\n          { query: draft }\n        );\n        this.setState({ isSaved: true });\n      } else {\n        this.setState({\n          draft,\n          isSaved: false\n        });\n      }\n    } catch (_) {\n      this.setState({\n        draft,\n        isSaved: false\n      });\n    }\n  };\n\n  updateType = (type: GraphQLType): void => {\n    this.props.onUpdateData({\n      query: type + ' ' + this.state.draft.replace(this.state.type, '')\n    });\n  };\n\n  pretty = () => {\n    this.props.onUpdateData({\n      query:\n        this.state.type +\n        ' ' +\n        GraphQL.PrettyMe(this.state.draft).replace(this.state.type, '')\n    });\n  };\n\n  static PrettyMe(gql: string): string {\n    try {\n      return print(parse(gql));\n    } catch (_) {\n      // Todo: print errors\n      return gql;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"GraphQL\">\n        <div className=\"row\">\n          <TextArea\n            isFullWidth={true}\n            onChangeDirect={this.updateGraphQL}\n            style={{\n              background: `url('${process.env.PUBLIC_URL}/images/textarea.png')`,\n              backgroundAttachment: 'local',\n              backgroundColor: '#19404A',\n              backgroundRepeat: 'no-repeat',\n              color: '#EEE8D5'\n            }}\n            value={this.state.draft}\n          />\n        </div>\n        <div className=\"row\">\n          <div className=\"two columns\">\n            <Saving isSaved={this.state.isSaved} />\n          </div>\n          <div className=\"two columns\">\n            <Type\n              className=\"u-full-width\"\n              onUpdate={this.updateType}\n              selected={this.state.type}\n            />\n          </div>\n          <div className=\"two columns\">\n            <Tooltip text=\"Pretty payload\">\n              <Button\n                className=\"u-full-width\"\n                isDisabled={!this.state.isSaved}\n                isPrimary={false}\n                onClick={this.pretty}\n              >\n                <FontAwesomeIcon icon={faMagic} size=\"lg\" />\n              </Button>\n            </Tooltip>\n          </div>\n          <div className=\"two columns\">\n            <Copy\n              className=\"u-pull-right\"\n              content={GraphQL.PrettyMe(this.state.draft)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import './css/Heading.css';\n\nimport React from 'react';\n\ninterface HeadingProps {\n  imageSrc: string;\n}\n\nconst Heading: React.FunctionComponent<HeadingProps> = props => {\n  return (\n    <div className=\"Heading\">\n      <img alt=\"curlify logo\" src={props.imageSrc} />\n    </div>\n  );\n};\n\nexport default Heading;\n","import React from 'react';\n\ninterface ButtonProps {\n  className?: string;\n  id?: string;\n  isDisabled?: boolean;\n  isPrimary: boolean;\n  label?: string;\n  onClick: (val: any) => void;\n  onClickRaw?: (e: React.MouseEvent<HTMLElement>) => void;\n  clickValue?: any;\n}\n\nconst Button: React.FunctionComponent<ButtonProps> = props => {\n  const clickHandler = (e: React.MouseEvent) => {\n    e.preventDefault();\n    props.onClick(props.clickValue);\n  };\n\n  return (\n    <button\n      className={\n        (props.isPrimary ? 'button-primary ' : ' ') + props.className || ' '\n      }\n      disabled={props.isDisabled}\n      id={props.id}\n      onClick={props.onClickRaw || clickHandler}\n    >\n      {props.children || props.label || ''}\n    </button>\n  );\n};\n\nexport default Button;\n","/**\n * @file Tooltip component\n * @author Mattamorphic\n */\nimport './css/Tooltip.css';\n\nimport React from 'react';\n\ninterface TooltipProps {\n  text: string;\n}\n\nconst Tooltip: React.FunctionComponent<TooltipProps> = props => {\n  return (\n    <div className=\"Tooltip\">\n      <span className=\"TooltipText\">{props.text}</span>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import Button from './Button';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Tooltip from './Tooltip';\n\ninterface CopyProps {\n  className?: string;\n  label?: string;\n  content: string;\n}\n\nconst Copy: React.FunctionComponent<CopyProps> = props => {\n  const copy = async () => {\n    await navigator.clipboard.writeText(props.content);\n  };\n\n  return (\n    <Tooltip text=\"Copy\">\n      <Button\n        className={props.className || ''}\n        isPrimary={false}\n        onClick={copy}\n      >\n        <FontAwesomeIcon icon={faCopy} size=\"lg\" />\n      </Button>\n    </Tooltip>\n  );\n};\n\nexport default Copy;\n","import './css/Saving.css';\n\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\ninterface SavingProps {\n  className?: string;\n  isSaved: boolean;\n}\n\nconst Saving: React.FunctionComponent<SavingProps> = props => {\n  return (\n    <CSSTransitionGroup\n      transitionEnter={true}\n      transitionEnterTimeout={500}\n      transitionLeave={false}\n      transitionName=\"save-notice\"\n    >\n      <div\n        key={'notice-' + props.isSaved}\n        className={\n          (props.isSaved ? 'Saved' : 'NotSaved') +\n          ' SavingNotice ' +\n          (props.className || '')\n        }\n      >\n        <FontAwesomeIcon icon={faSave} size=\"lg\" />\n      </div>\n    </CSSTransitionGroup>\n  );\n};\n\nexport default Saving;\n","import React from 'react';\n\ninterface TextAreaProps {\n  className?: string;\n  isFullWidth: boolean;\n  onChangeDirect?: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onUpdate?: (value: string) => void;\n  style?: {\n    [key: string]: string;\n  };\n  value: string;\n}\n\ninterface TextAreaState {}\n\nexport default class TextArea extends React.Component<\n  TextAreaProps,\n  TextAreaState\n> {\n  constructor(props: TextAreaProps) {\n    super(props);\n    this.state = {};\n  }\n\n  onUpdate = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    if (this.props.onChangeDirect) {\n      this.props.onChangeDirect(e);\n    } else if (this.props.onUpdate) {\n      this.props.onUpdate(e.target.value);\n    }\n  };\n\n  render() {\n    return (\n      <textarea\n        className={\n          (this.props.isFullWidth ? 'u-full-width ' : ' ') +\n            this.props.className || ''\n        }\n        onChange={this.onUpdate}\n        style={this.props.style || {}}\n        value={this.props.value}\n      ></textarea>\n    );\n  }\n}\n","/**\n * @file Curl component\n * @author Mattamorphic\n */\nimport './css/Curl.css';\n\nimport * as utils from '../../../utils';\n\nimport { ConfigData } from '../../config/Config';\nimport Copy from '../../shared/Copy';\nimport { Header } from '../../config/headers/Headers';\nimport React from 'react';\nimport Saving from '../../shared/Saving';\nimport TextArea from '../../shared/TextArea';\n\nimport { DataData, payloadType } from '../../data/Data';\nimport { DataType, HTTPHeaders, HTTPMethods } from '../../../enums';\n\ninterface DomainAndEndpoint {\n  domain: string | null;\n  endpoint: string | null;\n}\n\ninterface SerializedCurl {\n  config: ConfigData;\n  data: DataData;\n  hasNewConfig: boolean;\n  hasNewData: boolean;\n}\n\ninterface CurlProps {\n  config: ConfigData;\n  data: DataData;\n  updateConfig: (data: ConfigData) => void;\n  updateData: (data: DataData) => void;\n}\n\ninterface CurlState {\n  draft: string;\n  hasDraft: boolean;\n}\n\nexport default class Curl extends React.Component<CurlProps, CurlState> {\n  constructor(props: CurlProps) {\n    super(props);\n    this.state = {\n      draft: Curl.getValue(props.config, props.data),\n      hasDraft: false\n    };\n  }\n\n  /**\n   * @function Get the headers from a curl string\n   *\n   * @param {string} value A Curl string\n   *\n   * @returns {Header[] | null}\n   */\n  getHeaders(value: string): Header[] | null {\n    const regex = utils.regEx.curlHeader;\n    const headers = [];\n    let match = null;\n    while ((match = regex.exec(value))) {\n      headers.push({\n        type: match[1] as HTTPHeaders,\n        value: match[2] as string\n      });\n    }\n    if (headers.length === 0) {\n      return null;\n    }\n    return headers;\n  }\n\n  /**\n   * @function Get the method from a curl string\n   *\n   * @param {string} value A Curl string\n   *\n   * @returns {HTTPMethods | null}\n   */\n  getMethod(value: string): HTTPMethods | null {\n    const regex = utils.regEx.curlMethod;\n    if (!value.match(regex)) {\n      return null;\n    }\n    const match = regex.exec(value);\n    if (!match) {\n      return null;\n    }\n    return match[1] as HTTPMethods;\n  }\n\n  /**\n   * @function Get the data from a curl string\n   *\n   * @param {string} value A Curl string\n   *\n   * @returns {payloadType | null}\n   */\n  getData(value: string): payloadType | null {\n    const regex = utils.regEx.curlData;\n    if (!value.match(regex)) {\n      return null;\n    }\n    const match = regex.exec(value);\n    if (!match) {\n      return null;\n    }\n    try {\n      return JSON.parse(match[1]);\n    } catch (_) {\n      return null;\n    }\n  }\n\n  /**\n   * @function Get the domain and endpoint from a curl string\n   *\n   * @param {string} value A Curl string\n   *\n   * @returns {DomainAndEndpoint | null}\n   */\n  getDomainAndEndpoint(value: string): DomainAndEndpoint | null {\n    const regex = utils.regEx.url;\n    if (!value.match(regex)) {\n      return null;\n    }\n    const match = regex.exec(value);\n    if (!match) {\n      return null;\n    }\n    return {\n      domain: match[1] || null,\n      endpoint: match[2] || null\n    };\n  }\n\n  /**\n   * @function Serialize a curl string\n   *\n   * @param {string} value A Curl string\n   *\n   * @returns {SerializedCurl}\n   */\n  serializerCurl = (value: string): SerializedCurl => {\n    // Get the current values\n    const config = this.props.config;\n    const data = this.props.data;\n\n    let hasNewConfig = false;\n    let hasNewData = false;\n\n    // decide which method to use\n    const method = this.getMethod(value);\n\n    // decide which headers to use\n    const headers = this.getHeaders(value);\n\n    // decide which data to use\n    const newData = this.getData(value);\n\n    // decide which domain and endpoint to use\n    const domainAndEndpoint = this.getDomainAndEndpoint(value);\n\n    if (\n      method &&\n      method !== config.method &&\n      Object.values(HTTPMethods).includes(method)\n    ) {\n      hasNewConfig = true;\n      config.method = method;\n    }\n\n    // Todo - this needs to actually check the header\n    if (headers) {\n      hasNewConfig = true;\n      config.headers = headers;\n    }\n    if (\n      newData &&\n      JSON.stringify(newData) !== JSON.stringify(data.data[data.type])\n    ) {\n      hasNewData = true;\n      switch (data.type) {\n        case DataType.GQL:\n          data.data.graphQL.query = newData.query;\n          break;\n        case DataType.JSON:\n          data.data.json = newData;\n          break;\n        case DataType.FORM:\n          break;\n      }\n    }\n    if (domainAndEndpoint) {\n      if (\n        domainAndEndpoint.domain &&\n        domainAndEndpoint.domain !== config.domain\n      ) {\n        hasNewConfig = true;\n        config.domain = domainAndEndpoint.domain;\n      }\n      if (\n        domainAndEndpoint.endpoint &&\n        domainAndEndpoint.endpoint !== config.endpoint\n      ) {\n        hasNewConfig = true;\n        config.endpoint = domainAndEndpoint.endpoint;\n      }\n    }\n\n    return {\n      config,\n      data,\n      hasNewConfig,\n      hasNewData\n    };\n  };\n\n  /**\n   * @function Update the data from the curl string\n   *\n   * @param {string} value The curl string\n   */\n  updateCurl = (value: string): void => {\n    const curl = this.serializerCurl(value);\n    if (curl.hasNewData || curl.hasNewConfig) {\n      // set draft to null, we'll update with the new props\n      this.setState({ hasDraft: false }, () => {\n        curl.hasNewData && this.props.updateData(curl.data);\n        curl.hasNewConfig && this.props.updateConfig(curl.config);\n      });\n    }\n    // set the draft to true, let's use this\n    if (!curl.hasNewData && !curl.hasNewConfig) {\n      this.setState({ draft: value, hasDraft: true });\n    }\n  };\n\n  /**\n   * @function Pass the config and data into a curl string\n   *\n   * @params {ConfigData} config The Configuration data for the curl request\n   * @params {DataData}   data   The data for the curl request\n   */\n  static getValue(config: ConfigData, data: DataData): string {\n    let payload = {};\n    switch (data.type) {\n      case DataType.JSON:\n        payload = data.data.json;\n        break;\n      case DataType.GQL:\n        payload = data.data.graphQL;\n        break;\n      case DataType.FORM:\n        break;\n    }\n\n    return (\n      `curl -X ${config.method} \\\\${'\\n'}` +\n      `${config.headers\n        .map(header => `-H \"${header.type}: ${header.value}\" \\\\${'\\n'}`)\n        .join('')}` +\n      `${\n        payload &&\n        Object.keys(payload).length > 0 &&\n        utils.methodHasPayload(config.method)\n          ? `-d '${Curl.parsePayloadString(JSON.stringify(payload))}' \\\\${'\\n'}`\n          : ''\n      }` +\n      `${config.domain + config.endpoint}`\n    );\n  }\n\n  /**\n   * @function Parse a string remove new line / tab and remove multiple spaces\n   *\n   * @param {string} value\n   */\n  static parsePayloadString(value: string): string {\n    return value\n      .replace(utils.regEx.newLineAndTab, '')\n      .replace(utils.regEx.multipleSpaces, ' ')\n      .replace(utils.regEx.singleEscapedNewLine, '');\n  }\n\n  render() {\n    const draft = this.state.hasDraft\n      ? this.state.draft\n      : Curl.getValue(this.props.config, this.props.data);\n    return (\n      <div className=\"Curl\">\n        <div className=\"row\">\n          <TextArea\n            isFullWidth={true}\n            onUpdate={this.updateCurl}\n            style={{\n              background: `url('${process.env.PUBLIC_URL}/images/textarea.png')`,\n              backgroundAttachment: 'local',\n              backgroundColor: '#19404A',\n              backgroundRepeat: 'no-repeat',\n              color: '#EEE8D5'\n            }}\n            value={draft}\n          />\n        </div>\n        <div className=\"row\">\n          <div className=\"two columns\">\n            <Saving className=\"u-full-width\" isSaved={!this.state.hasDraft} />\n          </div>\n          <div className=\"six columns\">\n            <div className=\"u-full-width\" />\n          </div>\n          <div className=\"four columns\">\n            <Copy className=\"u-full-width\" content={draft} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ninterface selectProps {\n  className?: string;\n  isDisabled?: boolean;\n  label?: string;\n  name?: string;\n  onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  selected?: string | string[] | null;\n  style?: { [key: string]: string };\n  values: string[];\n  isMultiple?: boolean;\n  size?: number;\n}\n\nconst Select: React.FunctionComponent<selectProps> = props => {\n  const selected = props.selected || '';\n  return (\n    <>\n      {props.label && <label>{props.label}</label>}\n      <select\n        className={props.className || ''}\n        disabled={props.isDisabled || false}\n        multiple={props.isMultiple || false}\n        name={props.name || ''}\n        onChange={props.onChange || null}\n        size={props.size || 0}\n        style={props.style || {}}\n        value={selected}\n      >\n        <option value=\"\" disabled>\n          Please Select\n        </option>\n        {props.values.map((value: string, i: number) => (\n          <option key={`${value}_${i}`} value={value}>\n            {value}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n};\n\nexport default Select;\n","import './css/Selector.css';\n\nimport { OutputType } from '../../../enums';\nimport React from 'react';\nimport Select from '../../shared/Select';\n\ninterface SelectorProps {\n  className?: string;\n  selected: OutputType;\n  onUpdate: (value: OutputType) => void;\n}\n\nconst Selector: React.FunctionComponent<SelectorProps> = props => {\n  const updateSelected = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    const value: OutputType = e.target.value as OutputType;\n    props.onUpdate(value);\n  };\n\n  return (\n    <Select\n      className={(props.className || '') + ' Selector'}\n      onChange={updateSelected}\n      selected={props.selected}\n      values={Object.values(OutputType)}\n    />\n  );\n};\n\nexport default Selector;\n","import './css/Output.css';\n\nimport { ConfigData } from '../config/Config';\nimport Curl from './curl/Curl';\nimport { DataData } from '../data/Data';\nimport { OutputType } from '../../enums';\nimport React from 'react';\nimport Selector from './selector/Selector';\n\ninterface OutputProps {\n  className?: string;\n  config: ConfigData;\n  data: DataData;\n  output: OutputType;\n  updateConfig: (data: ConfigData) => void;\n  updateData: (data: DataData) => void;\n}\n\nconst Output: React.FunctionComponent<OutputProps> = props => {\n  const updateType = (_: OutputType) => {\n    // Todo : Implement changer here in future.\n  };\n\n  return (\n    <div className={(props.className || '') + ' Output'}>\n      <div className=\"row OutputHeading\">\n        <h4> Request Config: {props.output.toUpperCase()} </h4>\n      </div>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          {props.output === OutputType.CURL && (\n            <Curl\n              config={props.config}\n              data={props.data}\n              updateConfig={props.updateConfig}\n              updateData={props.updateData}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <Selector\n            className=\"u-full-width\"\n            onUpdate={updateType}\n            selected={props.output}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Output;\n","import { InputTypes } from '../../enums';\nimport React from 'react';\n\n// Define Interfaces\ninterface InputProps {\n  className?: string;\n  isChecked?: boolean;\n  isDisabled?: boolean;\n  label?: string;\n  name?: string;\n  id?: string;\n  onChange?: (value: string) => void;\n  onChangeRaw?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  type?: InputTypes;\n  value?: string;\n}\n\n// Input Component\nconst Input: React.FunctionComponent<InputProps> = props => {\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (props.onChangeRaw) {\n      return props.onChangeRaw(e);\n    } else if (props.onChange) {\n      return props.onChange(e.target.value);\n    }\n  };\n\n  return (\n    <>\n      {props.label && <label>{props.label}</label>}\n      <input\n        checked={props.isChecked}\n        className={props.className || ''}\n        disabled={props.isDisabled}\n        id={props.id || ''}\n        name={props.name || ''}\n        onChange={onChange}\n        placeholder={props.placeholder || ''}\n        type={props.type || InputTypes.TEXT}\n        value={props.value || ''}\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import './css/Domain.css';\n\nimport Input from '../../../shared/Input';\nimport { InputTypes } from '../../../../enums';\nimport React from 'react';\nimport Tooltip from '../../../shared/Tooltip';\n\ninterface DomainProps {\n  isFullWidth: boolean;\n  value: string;\n  onUpdate: (value: string) => void;\n}\n\nconst Domain: React.FunctionComponent<DomainProps> = props => (\n  <Tooltip text=\"Domain\">\n    <Input\n      className={(props.isFullWidth ? 'u-full-width' : '') + ' Domain'}\n      onChange={props.onUpdate}\n      type={InputTypes.URL}\n      value={props.value}\n    />\n  </Tooltip>\n);\n\nexport default Domain;\n","import './css/Endpoint.css';\n\nimport Input from '../../../shared/Input';\nimport React from 'react';\nimport Tooltip from '../../../shared/Tooltip';\n\ninterface EndpointProps {\n  isFullWidth: boolean;\n  value: string;\n  onUpdate: (value: string) => void;\n}\n\nconst Endpoint: React.FunctionComponent<EndpointProps> = props => (\n  <Tooltip text=\"Endpoint\">\n    <Input\n      className={(props.isFullWidth ? 'u-full-width' : '') + ' Endpoint'}\n      onChange={props.onUpdate}\n      value={props.value}\n    />\n  </Tooltip>\n);\n\nexport default Endpoint;\n","import './css/Destination.css';\n\nimport { ColumnCount } from '../../../enums';\nimport Domain from './domain/Domain';\nimport Endpoint from './endpoint/Endpoint';\nimport React from 'react';\n\ntype DomainOrEndpoint = 'domain' | 'endpoint';\n\ninterface DestinationProps {\n  onUpdate: (domain: string, endpoint: string) => void;\n  domain: string;\n  endpoint: string;\n  width: ColumnCount;\n}\n\nconst Destination: React.FunctionComponent<DestinationProps> = props => {\n  const onUpdate = (value: string, type: DomainOrEndpoint): void => {\n    props.onUpdate(\n      type === 'domain' ? value : props.domain,\n      type === 'endpoint' ? value : props.endpoint\n    );\n  };\n\n  const onUpdateEndpoint = (endpoint: string): void => {\n    onUpdate(endpoint, 'endpoint');\n  };\n\n  const onUpdateDomain = (domain: string): void => {\n    onUpdate(domain, 'domain');\n  };\n\n  return (\n    <div className={props.width + ' Destination'}>\n      <div className=\"row\">\n        <div className=\"six columns\">\n          <Domain\n            isFullWidth={true}\n            onUpdate={onUpdateDomain}\n            value={props.domain}\n          />\n        </div>\n        <div className=\"six columns\">\n          <Endpoint\n            isFullWidth={true}\n            onUpdate={onUpdateEndpoint}\n            value={props.endpoint}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Destination;\n","import './css/Method.css';\n\nimport React from 'react';\nimport Select from '../../shared/Select';\nimport Tooltip from '../../shared/Tooltip';\n\nimport { ColumnCount, HTTPMethods } from '../../../enums/';\n\ninterface methodProps {\n  onUpdate: (value: HTTPMethods) => void;\n  selected: HTTPMethods;\n  width: ColumnCount;\n}\n\nconst Method: React.FunctionComponent<methodProps> = props => {\n  const updateSelected = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    const value: HTTPMethods = e.target.value as HTTPMethods;\n    props.onUpdate(value);\n  };\n\n  return (\n    <div className={props.width}>\n      <Tooltip text=\"Method\">\n        <Select\n          className=\"u-full-width Method\"\n          onChange={updateSelected}\n          selected={props.selected}\n          values={Object.values(HTTPMethods)}\n        />\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default Method;\n","/**\n * @file Notice component\n * @author Mattamorphic\n */\nimport './css/Notice.css';\n\nimport React from 'react';\n\ninterface NoticeProps {\n  className?: string;\n  heading: string;\n}\n\nconst Notice: React.FunctionComponent<NoticeProps> = props => {\n  return (\n    <div className={(props.className || '') + ' Notice'}>\n      <h4> {props.heading} </h4>\n      <>{props.children}</>\n    </div>\n  );\n};\n\nexport default Notice;\n","import Button from './Button';\nimport React from 'react';\n\ninterface TogglerProps {\n  className?: string;\n  label: string | JSX.Element;\n  onToggle: () => void;\n  isToggled: boolean;\n}\n\nconst Toggler: React.FunctionComponent<TogglerProps> = props => {\n  return (\n    <div>\n      <div className=\"row\">\n        <Button\n          className=\"u-full-width\"\n          isPrimary={false}\n          onClick={props.onToggle}\n        >\n          {typeof props.label === 'string'\n            ? (!props.isToggled ? 'Show ' : 'Hide ') + props.label\n            : props.label}\n        </Button>\n      </div>\n      {props.isToggled && (\n        <div className={props.className || ''}>\n          <div className=\"row\">{props.children}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Toggler;\n","import './css/Types.css';\n\nimport { HTTPHeaders } from '../../../../enums';\nimport React from 'react';\nimport Select from '../../../shared/Select';\n\ninterface TypeProps {\n  index: number;\n  isFullWidth: boolean;\n  values: (HTTPHeaders | string)[];\n  selected: HTTPHeaders | string;\n  onUpdate: (value: HTTPHeaders, index: number) => void;\n}\n\nconst Types: React.FunctionComponent<TypeProps> = props => {\n  const updateSelected = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    const value: HTTPHeaders = e.target.value as HTTPHeaders;\n    props.onUpdate(value, props.index);\n  };\n\n  return (\n    <Select\n      className={(props.isFullWidth ? 'u-full-width' : '') + ' Types'}\n      onChange={updateSelected}\n      selected={props.selected}\n      values={props.values}\n    />\n  );\n};\n\nexport default Types;\n","import './css/Value.css';\n\nimport Input from '../../../shared/Input';\nimport React from 'react';\n\ninterface ValueProps {\n  index: number;\n  isFullWidth: boolean;\n  value: string;\n  onUpdate: (value: string, index: number) => void;\n}\n\nconst Value: React.FunctionComponent<ValueProps> = props => {\n  const updateValue = (value: string): void => {\n    props.onUpdate(value, props.index);\n  };\n\n  return (\n    <Input\n      className={(props.isFullWidth ? 'u-full-width' : '') + ' Value'}\n      onChange={updateValue}\n      value={props.value}\n    />\n  );\n};\n\nexport default Value;\n","import './css/Headers.css';\n\nimport Button from '../../shared/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport Types from './type/Types';\nimport Value from './value/Value';\n\nimport { ColumnCount, HTTPHeaders } from '../../../enums';\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nexport interface Header {\n  type: HTTPHeaders | string;\n  value: string;\n}\n\ninterface HeadersProps {\n  onUpdate: (value: Header | null, index: number) => void;\n  selected: Header[];\n  width: ColumnCount;\n}\n\nconst Headers: React.FunctionComponent<HeadersProps> = props => {\n  const updateType = (type: HTTPHeaders, index: number): void => {\n    const header = props.selected[index];\n    header.type = type;\n    props.onUpdate(header, index);\n  };\n\n  const updateValue = (value: string, index: number): void => {\n    const header = props.selected[index];\n    header.value = value;\n    props.onUpdate(header, index);\n  };\n\n  const addHeader = (e: React.MouseEvent<HTMLElement>): void => {\n    e.preventDefault();\n    // create a pending header, add this to the end of the index\n    props.onUpdate(\n      {\n        type: '',\n        value: ''\n      },\n      props.selected.length\n    );\n  };\n\n  const removeHeader = (e: React.MouseEvent<HTMLElement>): void => {\n    e.preventDefault();\n    const index = e.currentTarget.id.split('_').pop();\n\n    if (index === undefined) {\n      // oh no...\n      return;\n    }\n    props.onUpdate(null, parseInt(index));\n  };\n\n  // Don't allow duplicate headers.\n  const selected = props.selected.map(header => header.type);\n  const values = Object.values(HTTPHeaders).filter(\n    header => !selected.includes(header)\n  );\n\n  return (\n    <div className={props.width + ' Headers'}>\n      {props.selected.map((header: Header, index: number) => (\n        <div key={`${header.type}_${index}`} className=\"row\">\n          {\n            // TODO: selected and values aren't behaving below\n          }\n          <div className=\"two columns\">\n            <Button\n              className=\"u-full-width\"\n              id={`remove_${index}`}\n              isPrimary={false}\n              onClick={() => {}}\n              onClickRaw={removeHeader}\n            >\n              <FontAwesomeIcon icon={faMinus} size=\"lg\" />\n            </Button>\n          </div>\n          <div className=\"four columns\">\n            <Types\n              index={index}\n              isFullWidth={true}\n              onUpdate={updateType}\n              selected={header.type}\n              values={[...values, header.type]}\n            />\n          </div>\n          <div className=\"four columns\">\n            <Value\n              index={index}\n              isFullWidth={true}\n              onUpdate={updateValue}\n              value={header.value || ''}\n            />\n          </div>\n          <div className=\"two columns\">\n            <Button\n              className=\"u-full-width\"\n              isPrimary={false}\n              onClick={() => {}}\n              onClickRaw={addHeader}\n            >\n              <FontAwesomeIcon icon={faPlus} size=\"lg\" />\n            </Button>\n          </div>\n        </div>\n      ))}\n      {props.selected.length === 0 && (\n        <div className=\"row\">\n          <Button\n            className=\"u-full-width\"\n            isPrimary={false}\n            onClick={() => {}}\n            onClickRaw={addHeader}\n          >\n            Configure Headers\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Headers;\n","import Destination from './destination/Destination';\nimport Method from './method/Method';\nimport Notice from '../shared/Notice';\nimport React from 'react';\nimport Toggler from '../shared/Toggler';\n\nimport { ColumnCount, HTTPMethods } from '../../enums';\nimport Headers, { Header } from './headers/Headers';\n\nexport interface ConfigData {\n  method: HTTPMethods;\n  headers: Header[];\n  domain: string;\n  endpoint: string;\n}\n\ninterface ConfigProps {\n  data: ConfigData;\n  updateConfig: (data: ConfigData) => void;\n}\n\ninterface ConfigState {\n  showConfigSettings: boolean;\n}\n\nexport default class Config extends React.PureComponent<\n  ConfigProps,\n  ConfigState\n> {\n  constructor(props: ConfigProps) {\n    super(props);\n    this.state = {\n      showConfigSettings: true\n    };\n  }\n\n  updateMethod = (value: HTTPMethods) => {\n    const data = this.props.data;\n    data.method = value;\n    this.props.updateConfig(data);\n  };\n\n  updateHeaders = (value: Header | null, index: number): void => {\n    const data = this.props.data;\n    if (!data.headers[index] && value) {\n      data.headers.push(value);\n    } else {\n      if (!value) {\n        delete data.headers[index];\n        data.headers = data.headers.filter(header => header);\n      } else {\n        data.headers[index] = value;\n      }\n    }\n    this.props.updateConfig(data);\n  };\n\n  updateDestination = (domain: string, endpoint: string) => {\n    const data = this.props.data;\n    data.domain = domain;\n    data.endpoint = endpoint;\n    this.props.updateConfig(data);\n  };\n\n  toggleConfigSettings = () => {\n    this.setState(prevState => ({\n      showConfigSettings: !prevState.showConfigSettings\n    }));\n  };\n\n  render() {\n    const destination = this.props.data.domain + this.props.data.endpoint;\n    return (\n      <>\n        <div className=\"row\">\n          <Toggler\n            className=\"Config\"\n            isToggled={this.state.showConfigSettings}\n            label=\"Config Settings\"\n            onToggle={this.toggleConfigSettings}\n          >\n            <div className=\"row\">\n              <h4>Request Config Settings</h4>\n            </div>\n            <div className=\"row\">\n              <Headers\n                onUpdate={this.updateHeaders}\n                selected={this.props.data.headers}\n                width={ColumnCount.TWELVE}\n              />\n            </div>\n            <div className=\"row\">\n              <Method\n                onUpdate={this.updateMethod}\n                selected={this.props.data.method}\n                width={ColumnCount.TWO}\n              />\n              <Destination\n                domain={this.props.data.domain}\n                endpoint={this.props.data.endpoint}\n                onUpdate={this.updateDestination}\n                width={ColumnCount.TEN}\n              />\n            </div>\n          </Toggler>\n        </div>\n        {!this.state.showConfigSettings && (\n          <Notice heading=\"Request Config Settings\">\n            Sending a [<strong>{this.props.data.method}</strong>] request to: [\n            <strong>\n              <a href={destination}>{destination}</a>\n            </strong>\n            ]\n            {this.props.data.headers.length > 0 && (\n              <>\n                , with the HTTP Headers:{' '}\n                {this.props.data.headers.map(header => (\n                  <>\n                    <br />\n                    <strong>{header.type}</strong>: <em>{header.value}</em>\n                  </>\n                ))}\n              </>\n            )}\n          </Notice>\n        )}\n      </>\n    );\n  }\n}\n","import './css/Type.css';\n\nimport { GraphQLType } from '../GraphQL';\nimport React from 'react';\nimport Select from '../../../shared/Select';\n\ninterface TypeProps {\n  className?: string;\n  selected: GraphQLType;\n  onUpdate: (type: GraphQLType) => void;\n}\n\nconst Type: React.FunctionComponent<TypeProps> = props => {\n  const updateSelected = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    const value: GraphQLType = e.target.value as GraphQLType;\n    props.onUpdate(value);\n  };\n\n  return (\n    <Select\n      className={(props.className || '') + ' Type'}\n      onChange={updateSelected}\n      selected={props.selected}\n      values={Object.values(GraphQLType)}\n    />\n  );\n};\n\nexport default Type;\n","/**\n * @file Curl component\n * @author Mattamorphic\n */\nimport './css/Json.css';\n\nimport Button from '../../shared/Button';\nimport Copy from '../../shared/Copy';\nimport { faMagic } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { payloadType } from '../Data';\nimport React from 'react';\nimport Saving from '../../shared/Saving';\nimport TextArea from '../../shared/TextArea';\nimport Tooltip from '../../shared/Tooltip';\n\ninterface JsonProps {\n  data: payloadType;\n  onUpdateData: (value: payloadType) => void;\n}\n\ninterface JsonState {\n  draft: string;\n  hasDraft: boolean;\n}\n\nexport default class Json extends React.PureComponent<JsonProps, JsonState> {\n  constructor(props: JsonProps) {\n    super(props);\n    this.state = {\n      draft: JSON.stringify(props.data, null, 2),\n      hasDraft: false\n    };\n  }\n\n  /**\n   * @function We have to update the state based on the props, this needs removing\n   *\n   * @param {JsonProps} newProps The new received props\n   * @param {JsonState} state    The current state\n   *\n   * @return {JsonState}\n   */\n  static getDerivedStateFromProps(\n    newProps: JsonProps,\n    state: JsonState\n  ): JsonState {\n    let draft = state.draft;\n    let hasDraft = state.hasDraft;\n    if (\n      !state.hasDraft &&\n      JSON.stringify(newProps.data) !== JSON.stringify(JSON.parse(state.draft))\n    ) {\n      draft = JSON.stringify(newProps.data, null, 2);\n      hasDraft = false;\n    } else {\n      try {\n        JSON.parse(draft);\n        hasDraft = false;\n      } catch (_) {}\n    }\n    return {\n      draft,\n      hasDraft\n    };\n  }\n\n  /**\n   * @function Update the data from the json string\n   *\n   * @param {string} value The possible json string\n   */\n  updateJson = (value: string) => {\n    this.setState({\n      draft: value,\n      hasDraft: true\n    });\n    try {\n      const object = JSON.parse(value);\n      this.props.onUpdateData(object);\n    } catch (_) {\n      // Todo: print the error\n    }\n  };\n\n  /**\n   * @function Pretty print the json in the state\n   */\n  pretty = () => {\n    try {\n      this.setState({\n        draft: JSON.stringify(JSON.parse(this.state.draft), null, 2),\n        hasDraft: true\n      });\n    } catch (_) {\n      // Todo: Print the error;\n      return;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Json\">\n        <div className=\"row\">\n          <TextArea\n            isFullWidth={true}\n            onUpdate={this.updateJson}\n            style={{\n              background: `url('${process.env.PUBLIC_URL}/images/textarea.png')`,\n              backgroundAttachment: 'local',\n              backgroundColor: '#19404A',\n              backgroundRepeat: 'no-repeat',\n              color: '#EEE8D5'\n            }}\n            value={this.state.draft}\n          />\n        </div>\n        <div className=\"row\">\n          <div className=\"two columns\">\n            <Saving className=\"u-full-width\" isSaved={!this.state.hasDraft} />\n          </div>\n          <div className=\"four columns\">\n            <Tooltip text=\"Pretty payload\">\n              <Button\n                className=\"u-full-width\"\n                isDisabled={!this.state.hasDraft}\n                isPrimary={false}\n                onClick={this.pretty}\n              >\n                <FontAwesomeIcon icon={faMagic} size=\"lg\" />\n              </Button>\n            </Tooltip>\n          </div>\n          <div className=\"four columns\">\n            <Copy className=\"u-full-width\" content={this.state.draft} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import './css/Selector.css';\n\nimport { DataType } from '../../../enums';\nimport React from 'react';\nimport Select from '../../shared/Select';\n\ninterface SelectorProps {\n  className?: string;\n  selected: DataType;\n  onUpdate: (value: DataType) => void;\n}\n\nconst Selector: React.FunctionComponent<SelectorProps> = props => {\n  const updateSelected = (e: React.ChangeEvent<HTMLSelectElement>): void => {\n    const value: DataType = e.target.value as DataType;\n    props.onUpdate(value);\n  };\n\n  return (\n    <Select\n      className={(props.className || '') + ' Selector'}\n      onChange={updateSelected}\n      selected={props.selected}\n      values={Object.values(DataType)}\n    />\n  );\n};\n\nexport default Selector;\n","import './css/Data.css';\n\nimport { DataType } from '../../enums';\nimport GraphQL from './graphql/GraphQL';\nimport Json from './json/Json';\nimport React from 'react';\nimport Selector from './selector/Selector';\n\nexport type payloadType = { [key: string]: any };\nexport type gqlPayloadType = { query: string };\n\nexport interface DataData {\n  type: DataType;\n  data: {\n    [DataType.JSON]: payloadType;\n    [DataType.GQL]: gqlPayloadType;\n    [DataType.FORM]: null;\n  };\n}\n\ninterface DataProps {\n  className?: string;\n  data: DataData;\n  updateData: (data: DataData) => void;\n}\n\nconst Data: React.FunctionComponent<DataProps> = props => {\n  const updateType = (value: DataType) => {\n    const data = props.data;\n    data.type = value;\n    props.updateData(data);\n  };\n\n  const updateJsonData = (value: payloadType) => {\n    const data = props.data;\n    data.data.json = value;\n    props.updateData(data);\n  };\n\n  const updateGraphQLData = (value: gqlPayloadType) => {\n    const data = props.data;\n    data.data.graphQL = value;\n    props.updateData(data);\n  };\n\n  return (\n    <div className={(props.className || '') + ' Data'}>\n      <div className=\"row DataHeading\">\n        <h4> Request Data: {props.data.type.toUpperCase()} </h4>\n      </div>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          {props.data.type === DataType.JSON && (\n            <Json data={props.data.data.json} onUpdateData={updateJsonData} />\n          )}\n          {props.data.type === DataType.GQL && (\n            <GraphQL\n              data={props.data.data.graphQL}\n              onUpdateData={updateGraphQLData}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <Selector\n            className=\"u-full-width\"\n            onUpdate={updateType}\n            selected={props.data.type}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Data;\n","/**\n * @file ClearHistory component\n * @author Mattamorphic\n */\nimport Button from '../../shared/Button';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\ninterface ClearHistoryProps {\n  clear: () => void;\n}\n\nconst ClearHistory: React.FunctionComponent<ClearHistoryProps> = props => {\n  return (\n    <Button isPrimary={false} onClick={props.clear}>\n      <FontAwesomeIcon icon={faTrash} size=\"lg\" />\n    </Button>\n  );\n};\n\nexport default ClearHistory;\n","/**\n * @file LoadHistoryEntry component\n * @author Mattamorphic\n */\nimport './css/LoadHistoryEntry.css';\n\nimport Button from '../../../../shared/Button';\nimport { ConfigData } from '../../../../config/Config';\nimport { DataData } from '../../../../data/Data';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\ninterface LoadHistoryEntryProps {\n  className?: string;\n  config: ConfigData;\n  data: DataData;\n  updateConfig: (config: ConfigData) => void;\n  updateData: (data: DataData) => void;\n}\n\nconst LoadHistoryEntry: React.FunctionComponent<\n  LoadHistoryEntryProps\n> = props => {\n  const load = () => {\n    props.updateConfig(props.config);\n    props.updateData(props.data);\n  };\n\n  return (\n    <Button className={props.className} isPrimary={false} onClick={load}>\n      <FontAwesomeIcon icon={faUpload} size=\"lg\" />\n    </Button>\n  );\n};\n\nexport default LoadHistoryEntry;\n","/**\n * @file ListHistoryEntry component\n * @author Mattamorphic\n */\nimport './css/ListHistoryEntry.css';\n\nimport { ConfigData } from '../../../config/Config';\nimport { DataData } from '../../../data/Data';\nimport LoadHistoryEntry from './loadhistoryentry/LoadHistoryEntry';\nimport React from 'react';\n\ninterface ListHistoryEntryProps {\n  className?: string;\n  config: ConfigData;\n  data: DataData;\n  id: string;\n  status: number;\n  updateConfig: (config: ConfigData) => void;\n  updateData: (data: DataData) => void;\n}\n\nconst ListHistoryEntry: React.FunctionComponent<\n  ListHistoryEntryProps\n> = props => {\n  const url = props.config.domain + props.config.endpoint;\n  let statusClass = 'success';\n  if (props.status > 200) {\n    if (props.status < 400) {\n      statusClass = 'redirect';\n    } else if (props.status < 500) {\n      statusClass = 'client';\n    } else {\n      statusClass = 'server';\n    }\n  }\n\n  return (\n    <div className={(props.className || '') + ' ListHistoryEntry'}>\n      <div className=\"row\">\n        <div className=\"two columns\">\n          <div className={statusClass + ' u-full-width ListHistoryEntryStatus'}>\n            {props.status}\n          </div>\n        </div>\n        <div className=\"two columns\">\n          <div\n            className={\n              props.config.method.toLowerCase() +\n              ' u-full-width ListHistoryEntryMethod'\n            }\n          >\n            {props.config.method}\n          </div>\n        </div>\n        <div className=\"two columns\">\n          <div\n            className={\n              props.config.method.toLowerCase() +\n              ' u-full-width ListHistoryEntryID'\n            }\n          >\n            {props.id}\n          </div>\n        </div>\n        <div className=\"four columns\">\n          <div className=\"u-full-width ListHistoryEntryDest\">\n            <a href={url}>{url}</a>\n          </div>\n        </div>\n        <div className=\"two columns ListHistoryEntryAction\">\n          <LoadHistoryEntry\n            className=\"u-full-width\"\n            config={props.config}\n            data={props.data}\n            updateConfig={props.updateConfig}\n            updateData={props.updateData}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListHistoryEntry;\n","/**\n * @file ListHistory component\n * @author Mattamorphic\n */\nimport './css/ListHistory.css';\n\nimport { ConfigData } from '../../config/Config';\nimport { DataData } from '../../data/Data';\nimport { HistoryEntry } from '../History';\nimport Input from '../../shared/Input';\nimport ListHistoryEntry from './listhistoryentry/ListHistoryEntry';\nimport React from 'react';\n\ninterface ListHistoryProps {\n  history: HistoryEntry[];\n  updateConfig: (config: ConfigData) => void;\n  updateData: (data: DataData) => void;\n}\n\ninterface ListHistoryState {\n  filter: string | null;\n}\n\nexport default class ListHistory extends React.PureComponent<\n  ListHistoryProps,\n  ListHistoryState\n> {\n  constructor(props: ListHistoryProps) {\n    super(props);\n    this.state = {\n      filter: null\n    };\n  }\n\n  updateFilter = (filter: string) => {\n    this.setState({\n      filter\n    });\n  };\n\n  render() {\n    const history = this.props.history.filter(entry =>\n      JSON.stringify(entry).includes(this.state.filter || '')\n    );\n\n    return (\n      <>\n        <div className=\"row\">\n          <Input\n            className=\"u-full-width ListHistoryFilter\"\n            isDisabled={this.props.history.length === 0}\n            onChange={this.updateFilter}\n            placeholder=\"Filter...\"\n            value={this.state.filter || ''}\n          />\n        </div>\n        <div className=\"ListHistory\">\n          {history.map((historyEntry: HistoryEntry, i: number) => (\n            <ListHistoryEntry\n              className={i % 2 === 0 ? 'dark' : 'light'}\n              config={historyEntry.config}\n              data={historyEntry.data}\n              id={historyEntry.id}\n              key={historyEntry.id}\n              status={historyEntry.status}\n              updateConfig={this.props.updateConfig}\n              updateData={this.props.updateData}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n","/**\n * @file History component\n * @author Mattamorphic\n */\nimport './css/History.css';\n\nimport ClearHistory from './clearhistory/ClearHistory';\nimport { ConfigData } from '../config/Config';\nimport { DataData } from '../data/Data';\nimport ListHistory from './listhistory/ListHistory';\nimport React from 'react';\nimport Toggler from '../shared/Toggler';\n\nexport interface HistoryEntry {\n  id: string;\n  config: ConfigData;\n  data: DataData;\n  status: number;\n}\n\ninterface HistoryProps {\n  history: HistoryEntry[];\n  clearHistory: () => void;\n  updateConfig: (config: ConfigData) => void;\n  updateData: (data: DataData) => void;\n}\n\ninterface HistoryState {\n  showHistory: boolean;\n}\n\nexport default class History extends React.PureComponent<\n  HistoryProps,\n  HistoryState\n> {\n  constructor(props: HistoryProps) {\n    super(props);\n    this.state = {\n      showHistory: false\n    };\n  }\n\n  loadHistory = (id: string): boolean => {\n    const item = window.localStorage.getItem(id);\n    if (item === null) {\n      return false;\n    }\n    const payload = JSON.parse(item);\n    this.props.updateConfig(payload.config);\n    this.props.updateData(payload.data);\n    return true;\n  };\n\n  toggleHistory = (): void => {\n    this.setState(prevState => ({\n      showHistory: !prevState.showHistory\n    }));\n  };\n\n  render() {\n    return (\n      <Toggler\n        className=\"History\"\n        isToggled={this.state.showHistory}\n        label=\"History\"\n        onToggle={this.toggleHistory}\n      >\n        <h4> History</h4>\n        <ListHistory\n          history={this.props.history}\n          updateConfig={this.props.updateConfig}\n          updateData={this.props.updateData}\n        />\n        <ClearHistory clear={this.props.clearHistory} />\n      </Toggler>\n    );\n  }\n}\n","/**\n * @file Table component\n * @author Mattamorphic\n */\nimport './css/Table.css';\n\nimport React from 'react';\n\nexport interface TableRow {\n  [key: string]: string | JSX.Element;\n}\n\ninterface TableProps {\n  className?: string;\n  data: TableRow[];\n}\n\nconst Table: React.FunctionComponent<TableProps> = props => {\n  if (props.data.length === 0) {\n    return <table className={props.className || ''} />;\n  }\n\n  const headers = Object.keys(props.data[0]);\n\n  return (\n    <table className={props.className || ''}>\n      <thead>\n        {headers.map((header: string, i: number) => (\n          <th key={`header_${i}`}>{header}</th>\n        ))}\n      </thead>\n      <tbody>\n        {props.data.map((row: TableRow, i: number) => (\n          <tr key={`tr_${i}`}>\n            {headers.map((header: string, j: number) => (\n              <td key={`tr_${i}_${j}`} data-label={header}>\n                {row[header]}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","/**\n * @file ResponseHeaders component\n * @author Mattamorphic\n */\n\nimport './css/ResponseHeaders.css';\n\nimport * as utils from '../../../../utils';\n\nimport React from 'react';\nimport Table from '../../../shared/Table';\nimport Toggler from '../../../shared/Toggler';\n\ninterface ResponseHeadersProps {\n  headers: Headers;\n}\n\ninterface ResponseHeadersState {\n  showHeaders: boolean;\n}\n\nexport default class ResponseHeaders extends React.PureComponent<\n  ResponseHeadersProps,\n  ResponseHeadersState\n> {\n  constructor(props: ResponseHeadersProps) {\n    super(props);\n    this.state = {\n      showHeaders: false\n    };\n  }\n\n  parse = (value: string): string | JSX.Element => {\n    if (utils.isStringANumber(value)) {\n      return <span className=\"header-value header-number\">{value}</span>;\n    }\n    if (utils.isStringADate(value)) {\n      return <span className=\"header-value header-date\">{value}</span>;\n    }\n    if (utils.isStringAURL(value)) {\n      return (\n        <span className=\"header-value header-url\">\n          <a href={value}>{value}</a>\n        </span>\n      );\n    }\n    if (utils.isStringBooleanOrNull(value)) {\n      return <span className=\"header-value header-boolean\">{value}</span>;\n    }\n    return <span className=\"header-value header-string\">{value}</span>;\n  };\n\n  toggleHeaders = () => {\n    this.setState(prevState => ({\n      showHeaders: !prevState.showHeaders\n    }));\n  };\n\n  render() {\n    return (\n      <Toggler\n        className=\"ResponseHeaders\"\n        isToggled={this.state.showHeaders}\n        label=\"Headers\"\n        onToggle={this.toggleHeaders}\n      >\n        <Table\n          className=\"u-max-full-width ResponseHeadersTable\"\n          data={Array.from(this.props.headers.keys()).map(key => ({\n            Header: this.parse(key),\n            Value: this.parse(this.props.headers.get(key) || '')\n          }))}\n        />\n      </Toggler>\n    );\n  }\n}\n","/**\n * @file ResponseJson component\n * @author Mattamorphic\n */\nimport './css/ResponseJson.css';\n\nimport * as utils from '../../../../utils';\n\nimport { JsonValueTypes } from '../../../../enums';\n\nimport React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport Toggler from '../../../shared/Toggler';\n\ninterface ResponseJsonProps {\n  data: { [key: string]: any };\n}\n\ninterface ResponseJsonState {\n  showJson: boolean;\n}\n\nexport default class ResponseJson extends React.PureComponent<\n  ResponseJsonProps,\n  ResponseJsonState\n> {\n  constructor(props: ResponseJsonProps) {\n    super(props);\n    this.state = {\n      showJson: false\n    };\n  }\n\n  toggleJson = () => {\n    this.setState(prevState => ({\n      showJson: !prevState.showJson\n    }));\n  };\n\n  replacer = (_: string, p1: string, p2: string, p3: string, p4: string) => {\n    const part = { end: p4, indent: p1, key: p2, value: p3 };\n\n    let valueClass = 'json-value';\n    let type = JsonValueTypes.STRING;\n    if (part.value !== undefined && part.value !== null) {\n      if (utils.isStringANumber(part.value)) {\n        valueClass = 'json-number';\n        type = JsonValueTypes.NUMBER;\n      } else if (utils.isStringADate(part.value)) {\n        valueClass = 'json-date';\n        type = JsonValueTypes.DATE;\n      } else if (utils.isStringBooleanOrNull(part.value)) {\n        valueClass = 'json-boolean';\n        type = JsonValueTypes.BOOLEAN;\n      } else if (utils.isStringAURL(part.value)) {\n        valueClass = 'json-url';\n        type = JsonValueTypes.URL;\n      } else {\n        valueClass = 'json-string';\n        type = JsonValueTypes.STRING;\n      }\n    }\n    return ReactDOMServer.renderToString(\n      <>\n        {'\\u00a0'.repeat(part.indent.length)}\n        {part.key && <span className=\"json-key\"> {part.key} </span>}\n        {part.value && (\n          <span className={valueClass}>\n            {type === JsonValueTypes.URL ? (\n              <a href={part.value.replace(utils.regEx.quotes, '')}>\n                {part.value}\n              </a>\n            ) : (\n              part.value\n            )}\n          </span>\n        )}\n        {part.end && <span className=\"json-key\"> {part.end} </span>}\n        <br />\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Toggler\n        isToggled={this.state.showJson}\n        label=\"Data\"\n        onToggle={this.toggleJson}\n      >\n        <div\n          className=\"ResponseJson\"\n          dangerouslySetInnerHTML={{\n            __html: JSON.stringify(this.props.data, null, 3).replace(\n              utils.regEx.jsonData,\n              this.replacer\n            )\n          }}\n        />\n      </Toggler>\n    );\n  }\n}\n","/**\n * @file ResponseRaw component\n * @author Mattamorphic\n */\nimport './css/ResponseRaw.css';\n\nimport React from 'react';\nimport Toggler from '../../../shared/Toggler';\n\ninterface ResponseRawProps {\n  data: string;\n}\n\ninterface ResponseRawState {\n  showRaw: boolean;\n}\n\nexport default class ResponseRaw extends React.PureComponent<\n  ResponseRawProps,\n  ResponseRawState\n> {\n  constructor(props: ResponseRawProps) {\n    super(props);\n    this.state = {\n      showRaw: false\n    };\n  }\n\n  toggleRaw = () => {\n    this.setState(prevState => ({\n      showRaw: !prevState.showRaw\n    }));\n  };\n\n  render() {\n    return (\n      <Toggler\n        isToggled={this.state.showRaw}\n        label=\"Raw\"\n        onToggle={this.toggleRaw}\n      >\n        <div className=\"ResponseRaw\">{this.props.data}</div>\n      </Toggler>\n    );\n  }\n}\n","import './css/FetchResponse.css';\n\nimport React from 'react';\nimport ResponseHeaders from './responseheaders/ResponseHeaders';\nimport ResponseJson from './responsejson/ResponseJson';\nimport ResponseRaw from './responseraw/ResponseRaw';\n\ninterface FetchResponseProps {\n  headers: Headers;\n  data: string;\n}\n\nconst FetchResponse: React.FunctionComponent<FetchResponseProps> = props => {\n  let json = {};\n  try {\n    json = JSON.parse(props.data);\n  } catch (_) {\n    json = {};\n  }\n\n  return (\n    <div className=\"FetchResponse\">\n      <ResponseHeaders headers={props.headers} />\n      <ResponseRaw data={props.data} />\n      <ResponseJson data={json} />\n    </div>\n  );\n};\n\nexport default FetchResponse;\n","import './css/Loading.css';\n\nimport React from 'react';\n\ninterface LoadingProps {\n  className?: string;\n}\n\nconst Loading: React.FunctionComponent<LoadingProps> = props => {\n  return (\n    <div className={(props.className || '') + ' LoadingContainer'}>\n      <div className=\"Loading\">\n        <div />\n      </div>\n      <div>Loading</div>\n    </div>\n  );\n};\n\nexport default Loading;\n","/**\n * @file $COMPONENT component\n * @author Mattamorphic\n */\nimport './css/Confirm.css';\n\nimport Button from './Button';\nimport React from 'react';\n\ninterface ConfirmProps {\n  className?: string;\n  label: string;\n  message: string;\n  onConfirm: () => void;\n  onCancel: () => void;\n  isPrimary?: boolean;\n}\n\nconst Confirm: React.FunctionComponent<ConfirmProps> = props => {\n  const onConfirm = () => {\n    const result = window.confirm(props.message);\n    result ? props.onConfirm() : props.onCancel();\n  };\n\n  return (\n    <Button\n      className={props.className || ''}\n      isPrimary={props.isPrimary || false}\n      label={props.label}\n      onClick={onConfirm}\n    />\n  );\n};\n\nexport default Confirm;\n","/**\n * @file Checkbox component\n * @author Mattamorphic\n */\nimport Input from './Input';\nimport { InputTypes } from '../../enums';\nimport React from 'react';\n\ninterface CheckboxProps {\n  className?: string;\n  isDisabled?: boolean;\n  label?: string;\n  isCheckedLabel?: string;\n  isNotCheckedLabel?: string;\n  name?: string;\n  id?: string;\n  isChecked: boolean;\n  onChange: (value: boolean) => void;\n  value?: string;\n}\n\nconst Checkbox: React.FunctionComponent<CheckboxProps> = props => {\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(e.target.checked);\n  };\n\n  const label = props.isChecked\n    ? props.isCheckedLabel || props.label\n    : props.isNotCheckedLabel || props.label;\n\n  return (\n    <div className={props.className || ''}>\n      <Input\n        id={props.id || ''}\n        isChecked={props.isChecked}\n        isDisabled={props.isDisabled || false}\n        name={props.name || ''}\n        onChangeRaw={onChange}\n        type={InputTypes.CHECKBOX}\n        value={props.value || ''}\n      />\n      <span> {label} </span>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","/**\n * @file Proxy component\n * @author Mattamorphic\n */\n\nimport './css/Proxy.css';\n\nimport * as utils from '../../../../utils';\n\nimport Checkbox from '../../../shared/Checkbox';\nimport Input from '../../../shared/Input';\nimport { InputTypes } from '../../../../enums';\nimport Notice from '../../../shared/Notice';\nimport React from 'react';\nimport Toggler from '../../../shared/Toggler';\n\nexport interface ProxyData {\n  url: string;\n  isEnabled: boolean;\n}\n\ninterface ProxyProps {\n  isExpanded: boolean;\n  proxy: ProxyData;\n  onUpdateProxy: (data: ProxyData) => void;\n}\n\ninterface ProxyState {\n  showProxySettings: boolean;\n}\n\nexport default class Proxy extends React.PureComponent<ProxyProps, ProxyState> {\n  constructor(props: ProxyProps) {\n    super(props);\n    this.state = {\n      showProxySettings: props.isExpanded\n    };\n  }\n\n  toggleProxySettings = () => {\n    this.setState(prevState => ({\n      showProxySettings: !prevState.showProxySettings\n    }));\n  };\n\n  onUpdateProxyUrl = (url: string) => {\n    this.props.onUpdateProxy({\n      isEnabled: this.props.proxy.isEnabled,\n      url\n    });\n  };\n\n  onUpdateProxyEnabled = (isEnabled: boolean) => {\n    this.props.onUpdateProxy({\n      isEnabled,\n      url: this.props.proxy.url\n    });\n  };\n\n  render() {\n    return (\n      <Toggler\n        className=\"Proxy\"\n        isToggled={this.state.showProxySettings}\n        label=\"Proxy Settings\"\n        onToggle={this.toggleProxySettings}\n      >\n        <div className=\"row\">\n          <Notice\n            className=\"twelve columns u-full-width\"\n            heading=\"Proxy Overview\"\n          >\n            Requests are proxied through a copy of cors-anywhere <br />\n            This is hosted on: <a href={utils.PROXY}>{utils.PROXY}</a> <br />\n            You can find the code for this at{' '}\n            <a href=\"https://github.com/Mattamorphic/curlify/tree/proxy\">\n              GitHub\n            </a>{' '}\n            <br />\n            If you&apos;d like to use your own proxy, simply replace the URL{' '}\n            <br />\n            This should follow cors-anywhere entry design <br />\n            This proxy forwards request, gets around the cors issue, and allows\n            us to return headers <br />\n            No data is recorded in the proxy\n          </Notice>\n        </div>\n        <div className=\"row\">\n          <Input\n            className=\"six columns u-full-width\"\n            isDisabled={!this.props.proxy.isEnabled}\n            onChange={this.onUpdateProxyUrl}\n            placeholder=\"Proxy Url\"\n            type={InputTypes.URL}\n            value={this.props.proxy.url}\n          />\n          <Checkbox\n            className=\"checkbox six columns u-full-width\"\n            isChecked={this.props.proxy.isEnabled}\n            isCheckedLabel=\"Proxy is enabled\"\n            isNotCheckedLabel=\"Proxy is not enabled\"\n            onChange={this.onUpdateProxyEnabled}\n            value=\"proxy\"\n          />\n        </div>\n      </Toggler>\n    );\n  }\n}\n","import './css/Request.css';\n\nimport Button from '../../shared/Button';\nimport Confirm from '../../shared/Confirm';\nimport React from 'react';\n\nimport Proxy, { ProxyData } from './proxy/Proxy';\n\ninterface RequestProps {\n  shouldConfirm: boolean;\n  incompleteData?: string;\n  hasRun: boolean;\n  proxy: ProxyData;\n  onRequest: () => void;\n  onUpdateProxy: (data: ProxyData) => void;\n}\n\nconst Request: React.FunctionComponent<RequestProps> = props => {\n  const onConfirm = props.onRequest;\n  const onCancel = () => {};\n\n  return (\n    <div className=\"row\">\n      <div className=\"Request\">\n        <Proxy\n          isExpanded={!props.hasRun}\n          onUpdateProxy={props.onUpdateProxy}\n          proxy={props.proxy}\n        />\n        {props.shouldConfirm ? (\n          <Confirm\n            className=\"u-full-width\"\n            label=\"Test\"\n            message=\"Are you sure?\"\n            onCancel={onCancel}\n            onConfirm={onConfirm}\n          />\n        ) : (\n          <Button\n            className=\"u-full-width\"\n            isPrimary={false}\n            label=\"Test\"\n            onClick={props.onRequest}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Request;\n","import './css/Test.css';\n\nimport * as utils from '../../utils';\n\nimport { ConfigData } from '../config/Config';\nimport { DataData } from '../data/Data';\nimport FetchResponse from './fetchresponse/FetchResponse';\nimport Loading from '../shared/Loading';\nimport Notice from '../shared/Notice';\nimport { ProxyData } from './request/proxy/Proxy';\nimport React from 'react';\nimport Request from './request/Request';\n\nexport interface ValidatePayloadResult {\n  message: string[];\n  success: boolean;\n}\n\ninterface TestProps {\n  config: ConfigData;\n  data: DataData;\n  proxy: ProxyData;\n  addToHistory: (config: ConfigData, data: DataData, status: number) => void;\n  updateConfig: (data: ConfigData) => void;\n  updateData: (data: DataData) => void;\n  updateProxy: (data: ProxyData) => void;\n  validation: ValidatePayloadResult;\n}\n\ninterface TestState {\n  isLoading: boolean;\n  hasRun: boolean;\n  response: {\n    headers?: Headers;\n    data?: string;\n    destination?: URL;\n    status?: number;\n  };\n}\n\nclass Test extends React.PureComponent<TestProps, TestState> {\n  baseState: TestState;\n\n  constructor(props: TestProps) {\n    super(props);\n    this.state = {\n      // has there been an execution\n      hasRun: false,\n      // is the request executing\n      isLoading: false,\n      // hold the response\n      response: {}\n    };\n    this.baseState = this.state;\n  }\n\n  componentDidUpdate(prevProps: TestProps) {\n    if (utils.hasProxyChanged(prevProps.proxy, this.props.proxy)) {\n      this.setState(this.baseState);\n    }\n  }\n\n  getDestination = (): string => {\n    const destination = this.props.config.domain + this.props.config.endpoint;\n    return this.props.proxy.isEnabled\n      ? this.props.proxy.url + destination\n      : destination;\n  };\n\n  getFetchData = () => {\n    const fetchData: RequestInit = {\n      body: null,\n      headers: new Headers(\n        this.props.config.headers.map(header => [header.type, header.value])\n      ),\n      method: this.props.config.method\n    };\n\n    if (utils.methodHasPayload(this.props.config.method)) {\n      fetchData.body = JSON.stringify(\n        this.props.data.data[this.props.data.type]\n      );\n    }\n    return fetchData;\n  };\n\n  onTest = async () => {\n    // Update the local state\n    this.setState(\n      {\n        hasRun: true,\n        isLoading: true,\n        response: {}\n      },\n      async () => {\n        // Todo: Run our own proxy service instead of using this.\n        const dest = new URL(this.getDestination());\n        let data = null;\n        let response: Response | null = null;\n        try {\n          response = await fetch(dest.href, this.getFetchData());\n          data = await response.text();\n          this.setState({\n            isLoading: false,\n            response: {\n              data,\n              destination: dest,\n              headers: response.headers as Headers,\n              status: response.status\n            }\n          });\n        } catch (_) {\n          this.setState({\n            isLoading: false\n          });\n        } finally {\n          // Store the request in the session history\n          this.props.addToHistory(\n            this.props.config,\n            this.props.data,\n            response ? response.status : 0\n          );\n        }\n      }\n    );\n  };\n\n  render() {\n    if (!this.props.validation.success) {\n      return (\n        <div className=\"row\">\n          <div className=\"Test Disabled\">\n            {this.props.validation.message.map((string, idx) => (\n              <label key={`validation_${idx}`}> {string} </label>\n            ))}\n          </div>\n        </div>\n      );\n    }\n    if (this.state.isLoading) {\n      return (\n        <div className=\"row\">\n          <Loading />\n        </div>\n      );\n    }\n\n    const proxyMessage = `${\n      this.props.proxy.isEnabled ? 'through Proxy' : ''\n    } to ${this.state.response.destination || this.getDestination()}`;\n\n    return (\n      <>\n        <Request\n          hasRun={this.state.hasRun}\n          onRequest={this.onTest}\n          onUpdateProxy={this.props.updateProxy}\n          proxy={this.props.proxy} // Todo: We need to ensure that everything matches up\n          shouldConfirm={false}\n        />\n        {this.state.hasRun &&\n          (this.state.response.headers && this.state.response.data ? (\n            <>\n              <div className=\"row\">\n                <Notice\n                  className=\"twelve columns u-full-width\"\n                  heading=\"Request complete\"\n                >\n                  Request sent {proxyMessage}\n                </Notice>\n              </div>\n              <div className=\"row\">\n                <FetchResponse\n                  data={this.state.response.data}\n                  headers={this.state.response.headers}\n                />\n              </div>\n            </>\n          ) : (\n            <div className=\"row\">\n              <Notice\n                className=\"twelve columns u-full-width\"\n                heading=\"Request Failed\"\n              >\n                Request couldn&apos;t be sent {proxyMessage}\n              </Notice>\n            </div>\n          ))}\n      </>\n    );\n  }\n}\n\nexport default Test;\n","// 'None' imports\nimport './css/App.css';\n\n// 'All' imports\nimport * as utils from './utils';\n\n// 'Single' Imports\nimport Heading from './components/heading/Heading';\nimport Output from './components/output/Output';\nimport { ProxyData } from './components/test/request/proxy/Proxy';\nimport React from 'react';\n\n// 'Multiple' imports\nimport Config, { ConfigData } from './components/config/Config';\nimport Data, { DataData } from './components/data/Data';\nimport { DataType, HTTPMethods, OutputType } from './enums';\nimport History, { HistoryEntry } from './components/history/History';\nimport Test, { ValidatePayloadResult } from './components/test/Test';\n\ninterface OutputState {\n  type: OutputType;\n}\n\ninterface AppState {\n  config: ConfigData;\n  data: DataData;\n  history: HistoryEntry[];\n  output: OutputState;\n  proxy: ProxyData;\n  validation: ValidatePayloadResult;\n}\n\ninterface AppProps {}\n\nexport default class App extends React.Component<AppProps, AppState> {\n  isStorageAvailable = false;\n\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      config: {\n        domain: 'https://api.github.com',\n        endpoint: '/users/octocat',\n        headers: [],\n        method: HTTPMethods.GET\n      },\n      data: {\n        data: {\n          form: null,\n          graphQL: { query: 'query {viewer {username}}' },\n          json: { test: 'value' }\n        },\n        type: DataType.JSON\n      },\n      history: utils.getHistory(),\n      output: {\n        type: OutputType.CURL\n      },\n      proxy: {\n        isEnabled: true,\n        url: utils.PROXY\n      },\n      validation: {\n        message: [],\n        success: true\n      }\n    };\n    // Only called once, no need to add to state\n    this.isStorageAvailable = utils.isStorageAvailable();\n  }\n\n  addToHistory = (config: ConfigData, data: DataData, status: number): void => {\n    this.setState(_ => {\n      utils.addToHistory(config, data, status);\n      return {\n        history: utils.getHistory()\n      };\n    });\n  };\n\n  clearHistory = (): void => {\n    window.localStorage.clear();\n    this.setState({\n      history: []\n    });\n  };\n\n  onConfigChange = (config: ConfigData): void => {\n    this.setState(\n      {\n        config: {\n          domain: config.domain,\n          endpoint: config.endpoint,\n          headers: config.headers,\n          method: config.method\n        }\n      },\n      () => this.setState({ validation: this.validatePayload() })\n    );\n  };\n\n  onDataChange = (data: DataData): void => {\n    this.setState(\n      {\n        data\n      },\n      () => this.setState({ validation: this.validatePayload() })\n    );\n  };\n\n  onProxyChange = (proxy: ProxyData): void => {\n    this.setState({\n      proxy\n    });\n  };\n\n  validatePayload = (): ValidatePayloadResult => {\n    const result = {\n      message: [] as string[],\n      success: true\n    };\n    if (!utils.isValidMethod(this.state.config.method)) {\n      result.message.push(\n        `Invalid ${this.state.config.method}, check settings above`\n      );\n      result.success = false;\n    }\n    if (!utils.isValidHeaders(this.state.config.headers)) {\n      result.message.push(`Invalid headers, check settings above`);\n      result.success = false;\n    }\n    if (\n      !utils.isValidURL(this.state.config.domain, this.state.config.endpoint)\n    ) {\n      result.message.push(\n        `Invalid URL ${this.state.config.domain} or ${this.state.config.endpoint}, check settings above`\n      );\n      result.success = false;\n    }\n\n    if (\n      this.state.data.type === DataType.GQL &&\n      !utils.isValidGraphQLString(this.state.data.data.graphQL.query)\n    ) {\n      result.message.push(`Invalid GraphQL string, check settings above`);\n      result.success = false;\n    }\n    return result;\n  };\n\n  render() {\n    const showData = utils.methodHasPayload(this.state.config.method);\n    return (\n      <div className=\"container App\">\n        <div className=\"row\">\n          <Heading imageSrc={process.env.PUBLIC_URL + '/images/banner.png'} />\n        </div>\n        <div className=\"row\">\n          <Config data={this.state.config} updateConfig={this.onConfigChange} />\n        </div>\n        <div className=\"row\">\n          <div className={(showData ? 'six' : 'twelve') + ' columns'}>\n            <Output\n              className=\"u-full-width\"\n              config={this.state.config}\n              data={this.state.data}\n              output={this.state.output.type}\n              updateConfig={this.onConfigChange}\n              updateData={this.onDataChange}\n            />\n          </div>\n          {showData && (\n            <div className=\"six columns\">\n              <Data\n                className=\"u-full-width\"\n                data={this.state.data}\n                updateData={this.onDataChange}\n              />\n            </div>\n          )}\n        </div>\n        {this.isStorageAvailable && (\n          <div className=\"row\">\n            <History\n              clearHistory={this.clearHistory}\n              history={this.state.history}\n              updateConfig={this.onConfigChange}\n              updateData={this.onDataChange}\n            />\n          </div>\n        )}\n        <div className=\"row\">\n          <Test\n            addToHistory={this.addToHistory}\n            config={this.state.config}\n            data={this.state.data}\n            proxy={this.state.proxy}\n            updateConfig={this.onConfigChange}\n            updateData={this.onDataChange}\n            updateProxy={this.onProxyChange}\n            validation={this.state.validation}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}